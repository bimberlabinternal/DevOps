  
name: R / github actions Setup
author: Ben Bimber
description: Performs R and python setup, as well as dependency installation for R/scRNA-seq repos
branding:
  icon: 'git-branch'
  color: 'black'
inputs:
  r_version:
    description: The R version to use
    required: true
    default: '4.5'
  bioc_version:
    description: The bioconductor version
    required: true
    default: '3.21'
  cache_version:
    description: The version string for the cache
    required: true
    default: '1'

runs:
  using: 'composite'
  steps:
    - uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ inputs.r_version }}
        use-public-rspm: true
        extra-repositories: 'https://cloud.r-project.org'

    - uses: r-lib/actions/setup-pandoc@v2

    # libharfbuzz-dev libfribidi-dev are added to fix textshaping install error
    # libhdf5-dev added for cellmembrane/SeuratDisk
    # libglpk-dev added due to igraph / bluster /scran error
    # libsodium-dev installed for VISION
    # libpoppler-cpp-dev added for pdftools, which is part of cellhashR
    # libudunits2-dev added due to units / ggpattern error
    # libgdal-dev added for ggpattern / sf / gdal-config missing error
    # NOTE: added numpy<2 to side-step a numpy version issue. This should be removed eventually. See: https://github.com/numpy/numpy/issues/26710
    # NOTE: restore @latest action when this is resolved and in a release (probably v1.5.4): https://github.com/awalsh128/cache-apt-pkgs-action/pull/160
    - name: Install apt packages
      uses: awalsh128/cache-apt-pkgs-action@v1.4.3
      with:
        packages: |
          libharfbuzz-dev 
          libfribidi-dev 
          libsodium-dev 
          libcurl4-openssl-dev 
          libglpk-dev 
          libhdf5-dev 
          libmagick++-dev
          texlive-latex-base 
          texlive-fonts-recommended 
          texlive-fonts-extra 
          texlive-latex-extra
          libpoppler-cpp-dev 
          libudunits2-dev
          libgdal-dev
        version: ${{ inputs.cache_version || 1 }}


    # NOTE: patsy added due to scanpy / python2 issue. Should eventually drop
    # NOTE: pandas>=2.2.3 used to force compatibility with numpy>2
    # NOTE: anndata>=0.12.0 used to force compatibility with zarr>=3
    - name: Prepare python packages
      run: |
        echo -e "wheel" > requirements.txt
        echo -e "setuptools" >> requirements.txt
        echo -e "patsy>1.0.0" >> requirements.txt
        echo -e "anndata>=0.12.0" >> requirements.txt
        echo -e "pandas>=2.2.3" >> requirements.txt
        echo -e "scanpy" >> requirements.txt
        echo -e "umap-learn" >> requirements.txt
        echo -e "phate" >> requirements.txt
        echo -e "sctour" >> requirements.txt
        echo -e "celltypist" >> requirements.txt
        echo -e "leidenalg" >> requirements.txt
        echo -e "scikit-misc" >> requirements.txt
        echo -e "tcrdist3" >> requirements.txt
        echo -e "demuxEM" >> requirements.txt
      shell: bash

    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - run: |
        python3 -m pip install --user -r requirements.txt
        python3 -m pip install --user git+https://github.com/bbimber/GMM-Demux.git
        RP=$(which python3)
        echo "Sys.setenv(\"RETICULATE_PYTHON\" = \"$RP\");" >> ~/.Rprofile
        cat ~/.Rprofile
      shell: bash

    # Note: the environment variable R_BIOC_VERSION is set to force remotes::install_bioc to follow the proper version
    - name: Setup Bioconductor
      run: |
        if (!requireNamespace("BiocManager", quietly=TRUE))  install.packages("BiocManager");
        BiocManager::install(version = "${{ inputs.bioc_version }}", ask = FALSE);
        cat(append = TRUE, file = "~/.Rprofile", "options(repos = BiocManager::repositories());")
        cat(append = TRUE, file = "~/.Rprofile", "Sys.setenv(R_BIOC_VERSION=as.character(BiocManager::version()));");
      shell: Rscript {0}

    - name: Perform custom installs
      run: |
        install.packages('remotes')
        # NOTE: fgsea added to avoid BH issue: https://github.com/ctlab/fgsea/issues/165
        remotes::install_github("ctlab/fgsea")
      shell: Rscript {0}

    - uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache: 'always'
        cache-version: ${{ inputs.cache_version || 1 }}
        upgrade: 'TRUE'
        extra-packages: |
          any::pkgdown
          any::rcmdcheck
          any::remotes
          any::devtools

    - name: Setup CoNGA
      run: |
        WD=`pwd`
        cd ../
        git clone https://github.com/phbradley/conga.git conga
        cd conga/tcrdist_cpp  
        make
        cd ../../
        pip3 install --use-pep517 -e conga
        cd $WD
      shell: bash

    - name: Setup SDA
      run: |
        SDA_PATH=/home/runner/work/sda
        mkdir $SDA_PATH
        wget -q -O $SDA_PATH/sda_static_linux https://www.dropbox.com/sh/chek4jkr28qnbrj/AADPy1qQlm3jsHPmPdNsjSx2a/bin/sda_static_linux?dl=1
        chmod +x $SDA_PATH/sda_static_linux          
        echo /home/runner/work/sda >> $GITHUB_PATH
      shell: bash

    - name: Session info
      run: |
        options(width = 100)
        pkgs <- installed.packages()[, "Package"]
        sessioninfo::session_info(pkgs, include_base = TRUE)
      shell: Rscript {0}